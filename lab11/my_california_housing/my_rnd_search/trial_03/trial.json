{"trial_id": "03", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "n_hidden", "default": 2, "conditions": [], "min_value": 0, "max_value": 3, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "n_neurons", "default": null, "conditions": [], "min_value": 1, "max_value": 100, "step": 1, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "learning_rate", "default": 0.0003, "conditions": [], "min_value": 0.0003, "max_value": 0.03, "step": null, "sampling": "log"}}, {"class_name": "Choice", "config": {"name": "optimizer", "default": "sgd", "conditions": [], "values": ["sgd", "adam", "nesterov"], "ordered": false}}], "values": {"n_hidden": 3, "n_neurons": 10, "learning_rate": 0.02564245669603218, "optimizer": "sgd"}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 270, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 261, in _run_and_update_trial\n    tuner_utils.convert_to_metrics_dict(\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras_tuner\\engine\\tuner_utils.py\", line 225, in convert_to_metrics_dict\n    [convert_to_metrics_dict(elem, objective) for elem in results]\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras_tuner\\engine\\tuner_utils.py\", line 225, in <listcomp>\n    [convert_to_metrics_dict(elem, objective) for elem in results]\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras_tuner\\engine\\tuner_utils.py\", line 238, in convert_to_metrics_dict\n    best_value, _ = _get_best_value_and_best_epoch_from_history(\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras_tuner\\engine\\tuner_utils.py\", line 209, in _get_best_value_and_best_epoch_from_history\n    objective_value = objective.get_value(metrics)\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras_tuner\\engine\\objective.py\", line 57, in get_value\n    return logs[self.name]\nKeyError: 'val_mse'\n"}